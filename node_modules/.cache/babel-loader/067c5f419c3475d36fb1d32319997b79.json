{"ast":null,"code":"var url = require(\"url\");\n\nvar template = require(\"nba-client-template\");\n\nvar HEADERS = {\n  \"Accept-Encoding\": \"gzip, deflate\",\n  \"Accept-Language\": \"en-US\",\n  Accept: \"*/*\",\n  \"User-Agent\": template.user_agent,\n  Referer: template.referrer,\n  Connection: \"keep-alive\",\n  \"Cache-Control\": \"no-cache\",\n  Origin: \"http://stats.nba.com\"\n};\n\nfunction createUrlString(_url, query) {\n  var urlObj = url.parse(_url);\n  urlObj.query = query;\n  return urlObj.format();\n}\n\nfunction createGetJson() {\n  var fetch = require(\"node-fetch\");\n\n  return function getJson(_url, query) {\n    var _options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var urlStr = createUrlString(_url, query);\n    var options = Object.assign({}, _options);\n    options.headers = Object.assign(options.headers || {}, HEADERS);\n    return fetch(urlStr, options).then(function (resp) {\n      if (resp.ok) return resp.json();\n      return resp.text().then(function (text) {\n        throw new Error(\"\".concat(resp.status, \" \").concat(resp.statusText, \" \\u2013 \").concat(text));\n      });\n    });\n  };\n}\n\nfunction createGetJsonp() {\n  var jsonp = require(\"jsonp\");\n\n  return function getJsonp(_url, query) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return new Promise(function (resolve, reject) {\n      var urlStr = createUrlString(_url, query);\n      jsonp(urlStr, {\n        timeout: options.timeout\n      }, function (err, data) {\n        // for compatibility with timeouts from request module\n        if (err && err.message === \"Timeout\") err.code = \"ETIMEDOUT\";\n        if (err) return reject(err);\n        return resolve(data);\n      });\n    });\n  };\n}\n\nmodule.exports = typeof window === \"undefined\" ? createGetJson() : createGetJsonp();","map":null,"metadata":{},"sourceType":"script"}